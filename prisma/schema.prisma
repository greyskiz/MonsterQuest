generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Tier {
  QUICK
  STANDARD
  LONG
}

enum Scope {
  SOLO
  PARTY
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  email        String   @unique
  passwordHash String
  role         String   @default("USER")
  displayName  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  encounters Encounter[]
  defeats    UserMonsterDefeat[]
}

model MonsterTemplate {
  id        String   @id @default(uuid())
  name      String
  tier      Tier
  scope     Scope
  minutes   Int
  baseCoins Int?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  encounters Encounter[]
  defeats    UserMonsterDefeat[]
}

model Encounter {
  id         String    @id @default(uuid())
  userId     String
  monsterId  String
  startedAt  DateTime  @default(now())
  finishedAt DateTime?

  user    User            @relation(fields: [userId], references: [id])
  monster MonsterTemplate @relation(fields: [monsterId], references: [id])
}

model UserMonsterDefeat {
  id         String   @id @default(uuid())
  userId     String
  monsterId  String
  defeatedAt DateTime @default(now())

  user     User            @relation(fields: [userId], references: [id])
  template MonsterTemplate @relation(fields: [monsterId], references: [id])
}
